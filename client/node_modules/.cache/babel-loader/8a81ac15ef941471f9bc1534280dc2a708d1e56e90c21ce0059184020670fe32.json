{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jithu\\\\OneDrive\\\\Documents\\\\mern-stack-authentication-boilerplate-main\\\\client\\\\src\\\\pages\\\\ForgotPasswordPage\\\\ForgotPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Form, Button, Spinner, Container } from \"react-bootstrap\";\nimport IMAGES from \"../../assets\";\nimport { Notify } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordScreen = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const forgotPasswordHandler = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // If any field is missing\n    if (!email) {\n      setIsLoading(false);\n      return Notify(\"Please Fill all the Feilds\", \"warn\");\n    }\n    try {\n      const response = await fetch(\"/api/auth/forgotPassword\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setIsLoading(false);\n        setIsEmailSent(true);\n        return Notify(data.data, \"success\");\n      } else {\n        setIsLoading(false);\n        return Notify(data.error, \"error\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEmailSent ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: IMAGES.email,\n        className: \"mx-auto d-block mt-5 mb-3\",\n        width: \"100px\",\n        alt: \"email sent successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"email__heading text-center fs-2\",\n        children: \"Check your mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted fs-5\",\n        children: \"We have sent a password recover instructions to your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      className: \"auth__form\",\n      onSubmit: forgotPasswordHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: \"Enter a email associated with your account and we'll send an email with instructions to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          tabIndex: \"1\",\n          placeholder: \"you@email.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        className: \"mb-3\",\n        tabIndex: \"2\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : \"Send me reset password instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ForgotPasswordScreen, \"yoxRgw46pTZp6i2nVVbjouAD8/w=\");\n_c = ForgotPasswordScreen;\nexport default ForgotPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordScreen\");","map":{"version":3,"names":["useState","Form","Button","Spinner","Container","IMAGES","Notify","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPasswordScreen","_s","email","setEmail","isLoading","setIsLoading","isEmailSent","setIsEmailSent","forgotPasswordHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","error","children","src","className","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","name","tabIndex","placeholder","value","onChange","target","variant","disabled","animation","role","size","_c","$RefreshReg$"],"sources":["C:/Users/jithu/OneDrive/Documents/mern-stack-authentication-boilerplate-main/client/src/pages/ForgotPasswordPage/ForgotPasswordPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Form, Button, Spinner, Container } from \"react-bootstrap\";\n\nimport IMAGES from \"../../assets\";\nimport { Notify } from \"../../utils\";\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // If any field is missing\n    if (!email) {\n      setIsLoading(false);\n      return Notify(\"Please Fill all the Feilds\", \"warn\");\n    }\n\n    try {\n      const response = await fetch(\"/api/auth/forgotPassword\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n        }),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        setIsLoading(false);\n        setIsEmailSent(true);\n        return Notify(data.data, \"success\");\n      } else {\n        setIsLoading(false);\n        return Notify(data.error, \"error\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n\n  return (\n    <>\n      {isEmailSent ? (\n        <Container>\n          <img\n            src={IMAGES.email}\n            className=\"mx-auto d-block mt-5 mb-3\"\n            width=\"100px\"\n            alt=\"email sent successfully\"\n          />\n\n          <p className=\"email__heading text-center fs-2\">Check your mail</p>\n          <p className=\"text-center text-muted fs-5\">\n            We have sent a password recover instructions to your email.\n          </p>\n        </Container>\n      ) : (\n        <Form className=\"auth__form\" onSubmit={forgotPasswordHandler}>\n          <h4 className=\"mb-3\">Forgot your password?</h4>\n          <p className=\"text-muted mb-4\">\n            Enter a email associated with your account and we'll send an email\n            with instructions to reset your password.\n          </p>\n\n          <Form.Group className=\"mb-3\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              tabIndex=\"1\"\n              placeholder=\"you@email.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button\n            variant=\"success\"\n            type=\"submit\"\n            className=\"mb-3\"\n            tabIndex=\"2\"\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <Spinner animation=\"border\" role=\"status\" size=\"sm\" />\n            ) : (\n              \"Send me reset password instructions\"\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\n\nexport default ForgotPasswordScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}