{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jithu\\\\OneDrive\\\\Documents\\\\mern-stack-authentication-boilerplate-main\\\\client\\\\src\\\\App.jsx\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\"; // CSS for \"react-toastify\"\n\n// Private route\nimport { PrivateRoutes } from \"./utils\";\n\n// Pages\nimport { HomePage, LoginPage, RegisterPage, ForgotPasswordPage, PasswordResetPage } from \"./pages\";\nimport { NavigationBar } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(PrivateRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgotPassword\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPasswordPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/passwordReset/:resetToken\",\n        element: /*#__PURE__*/_jsxDEV(PasswordResetPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","Navigate","ToastContainer","PrivateRoutes","HomePage","LoginPage","RegisterPage","ForgotPasswordPage","PasswordResetPage","NavigationBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","element","path","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/jithu/OneDrive/Documents/mern-stack-authentication-boilerplate-main/client/src/App.jsx"],"sourcesContent":["import { Routes, Route, Navigate } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.min.css\"; // CSS for \"react-toastify\"\n\n// Private route\nimport { PrivateRoutes } from \"./utils\";\n\n// Pages\nimport {\n  HomePage,\n  LoginPage,\n  RegisterPage,\n  ForgotPasswordPage,\n  PasswordResetPage,\n} from \"./pages\";\nimport { NavigationBar } from \"./components\";\n\nconst App = () => {\n  return (\n    <>\n      <NavigationBar />\n      <Routes>\n        {/* Private routes (Requires authentication token) */}\n        <Route element={<PrivateRoutes />}>\n          <Route path=\"/\" element={<HomePage />} />\n        </Route>\n\n        {/* Public routes */}\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route path=\"/forgotPassword\" element={<ForgotPasswordPage />} />\n        <Route\n          path=\"/passwordReset/:resetToken\"\n          element={<PasswordResetPage />}\n        />\n\n        {/* If the user enters an invalid path in the URL it automatically redirects them to the homepage */}\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n      </Routes>\n\n      {/* Remember to render the ToastContainer once in your application tree. Rendering it in the application root would be the best bet */}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}