{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jithu\\\\OneDrive\\\\Documents\\\\mern-stack-authentication-boilerplate-main\\\\client\\\\src\\\\pages\\\\RegisterPage\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Spinner, Image } from \"react-bootstrap\";\nimport { AuthState } from \"../../context/AuthProvider\";\nimport { Notify } from \"../../utils\";\nimport IMAGES from \"../../assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    profilePic: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [imagePreview, setimagePreview] = useState(IMAGES.user); // Default image for preview\n\n  const navigate = useNavigate();\n  const {\n    setAuth\n  } = AuthState();\n  const handleCredentials = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleProfilePic = async e => {\n    setIsLoading(true);\n    const profilePic = e.target.files[0]; // Get the file\n\n    // Check file type\n    if (profilePic.type !== \"image/jpeg\" && profilePic.type !== \"image/jpg\" && profilePic.type !== \"image/png\") {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Only .jpeg, .jpg and .png supported\", \"warn\");\n    }\n\n    // Check file size\n    if (profilePic.size > 1 * 1024 * 1024) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Please upload image under 1 MB\", \"warn\");\n    }\n\n    // Save the image in FormData object\n    const formData = new FormData();\n    formData.append(\"file\", profilePic); // Contains the file\n    formData.append(\"upload_preset\", `${process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET}`); // Upload preset in Cloudinary\n    formData.append(\"cloud_name\", `${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}`); // Cloud name in Cloudinary\n\n    try {\n      // Upload image to cloudinary if user selected an image\n      const cloudinaryResponse = await fetch(`https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/image/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const cloudinaryData = await cloudinaryResponse.json();\n\n      // If profile pic is uploaded, set the image URL for registration\n      setCredentials({\n        ...credentials,\n        profilePic: cloudinaryData.secure_url.toString()\n      });\n\n      // Image preview logic\n      const reader = new FileReader();\n      reader.readAsDataURL(profilePic);\n      reader.onload = () => setimagePreview(reader.result);\n      setIsLoading(false);\n      return Notify(\"Profile pictute uploaded\", \"success\");\n    } catch (error) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n  const registerHandler = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // If any field is missing\n    if (!credentials.name || !credentials.email || !credentials.password || !credentials.confirmPassword) {\n      setIsLoading(false);\n      return Notify(\"Please Fill all the Feilds\", \"warn\");\n    }\n\n    // If password and confirm password doesn't match\n    if (credentials.password !== credentials.confirmPassword) {\n      setIsLoading(false);\n      return Notify(\"Passwords Do Not Match\", \"warn\");\n    }\n\n    // If password is less than 8 characters\n    if (credentials.password.length < 8) {\n      setIsLoading(false);\n      return Notify(\"Password must be at least 8 characters\", \"warn\");\n    }\n    try {\n      // Register user\n      const response = await fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n          profilePic: credentials.profilePic\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem(\"auth\", JSON.stringify(data)); // Save auth details in local storage\n        setAuth(data);\n        setIsLoading(false);\n        navigate(\"/\"); // Go to home page\n        return Notify(\"Your account has been successfully created\", \"success\");\n      } else {\n        setIsLoading(false);\n        return Notify(data.error, \"error\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"auth__form\",\n    onSubmit: registerHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-5\",\n      children: \"Create new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        id: \"profilePicUpload\",\n        src: imagePreview,\n        alt: \"Profile image\",\n        draggable: \"false\",\n        roundedCircle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"name\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"name\",\n        tabIndex: \"1\",\n        placeholder: \"Full name\",\n        value: credentials.name,\n        onChange: e => handleCredentials(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        name: \"email\",\n        tabIndex: \"2\",\n        placeholder: \"Enter email\",\n        value: credentials.email,\n        onChange: e => handleCredentials(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"password\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        tabIndex: \"3\",\n        placeholder: \"Password\",\n        value: credentials.password,\n        onChange: e => handleCredentials(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"confirmPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        tabIndex: \"4\",\n        placeholder: \"Confirm password\",\n        value: credentials.confirmPassword,\n        onChange: e => handleCredentials(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"profilePic\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Upload profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        accept: \"image/jpeg, image/jpg, image/png\",\n        name: \"profilePic\",\n        tabIndex: \"5\",\n        size: \"sm\",\n        onChange: e => handleProfilePic(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      tabIndex: \"6\",\n      variant: \"success\",\n      type: \"submit\",\n      className: \"mb-3\",\n      disabled: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this) : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3 text-center\",\n      controlId: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          tabIndex: \"6\",\n          className: \"text-decoration-none\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"sNFbV5SzDkBngN3Dx7QU0l8Kh10=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","Link","useNavigate","Form","Button","Spinner","Image","AuthState","Notify","IMAGES","jsxDEV","_jsxDEV","RegisterPage","_s","credentials","setCredentials","name","email","password","confirmPassword","profilePic","isLoading","setIsLoading","imagePreview","setimagePreview","user","navigate","setAuth","handleCredentials","e","target","value","handleProfilePic","files","type","size","formData","FormData","append","process","env","REACT_APP_CLOUDINARY_UPLOAD_PRESET","REACT_APP_CLOUDINARY_CLOUD_NAME","cloudinaryResponse","fetch","method","body","cloudinaryData","json","secure_url","toString","reader","FileReader","readAsDataURL","onload","result","error","registerHandler","preventDefault","length","response","headers","JSON","stringify","data","success","localStorage","setItem","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","id","src","alt","draggable","roundedCircle","controlId","Label","Control","tabIndex","placeholder","onChange","accept","variant","disabled","animation","role","to","_c","$RefreshReg$"],"sources":["C:/Users/jithu/OneDrive/Documents/mern-stack-authentication-boilerplate-main/client/src/pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Spinner, Image } from \"react-bootstrap\";\n\nimport { AuthState } from \"../../context/AuthProvider\";\nimport { Notify } from \"../../utils\";\nimport IMAGES from \"../../assets\";\n\nconst RegisterPage = () => {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    profilePic: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [imagePreview, setimagePreview] = useState(IMAGES.user); // Default image for preview\n\n  const navigate = useNavigate();\n  const { setAuth } = AuthState();\n\n  const handleCredentials = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleProfilePic = async (e) => {\n    setIsLoading(true);\n    const profilePic = e.target.files[0]; // Get the file\n\n    // Check file type\n    if (\n      profilePic.type !== \"image/jpeg\" &&\n      profilePic.type !== \"image/jpg\" &&\n      profilePic.type !== \"image/png\"\n    ) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Only .jpeg, .jpg and .png supported\", \"warn\");\n    }\n\n    // Check file size\n    if (profilePic.size > 1 * 1024 * 1024) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Please upload image under 1 MB\", \"warn\");\n    }\n\n    // Save the image in FormData object\n    const formData = new FormData();\n    formData.append(\"file\", profilePic); // Contains the file\n    formData.append(\n      \"upload_preset\",\n      `${process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET}`\n    ); // Upload preset in Cloudinary\n    formData.append(\n      \"cloud_name\",\n      `${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}`\n    ); // Cloud name in Cloudinary\n\n    try {\n      // Upload image to cloudinary if user selected an image\n      const cloudinaryResponse = await fetch(\n        `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/image/upload`,\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n      const cloudinaryData = await cloudinaryResponse.json();\n\n      // If profile pic is uploaded, set the image URL for registration\n      setCredentials({\n        ...credentials,\n        profilePic: cloudinaryData.secure_url.toString(),\n      });\n\n      // Image preview logic\n      const reader = new FileReader();\n      reader.readAsDataURL(profilePic);\n      reader.onload = () => setimagePreview(reader.result);\n\n      setIsLoading(false);\n      return Notify(\"Profile pictute uploaded\", \"success\");\n    } catch (error) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // If any field is missing\n    if (\n      !credentials.name ||\n      !credentials.email ||\n      !credentials.password ||\n      !credentials.confirmPassword\n    ) {\n      setIsLoading(false);\n      return Notify(\"Please Fill all the Feilds\", \"warn\");\n    }\n\n    // If password and confirm password doesn't match\n    if (credentials.password !== credentials.confirmPassword) {\n      setIsLoading(false);\n      return Notify(\"Passwords Do Not Match\", \"warn\");\n    }\n\n    // If password is less than 8 characters\n    if (credentials.password.length < 8) {\n      setIsLoading(false);\n      return Notify(\"Password must be at least 8 characters\", \"warn\");\n    }\n\n    try {\n      // Register user\n      const response = await fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n          profilePic: credentials.profilePic,\n        }),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        localStorage.setItem(\"auth\", JSON.stringify(data)); // Save auth details in local storage\n        setAuth(data);\n        setIsLoading(false);\n        navigate(\"/\"); // Go to home page\n        return Notify(\"Your account has been successfully created\", \"success\");\n      } else {\n        setIsLoading(false);\n        return Notify(data.error, \"error\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n\n  return (\n    <Form className=\"auth__form\" onSubmit={registerHandler}>\n      <h2 className=\"text-center mb-5\">Create new account</h2>\n\n      <Form.Group className=\"mb-3 d-flex justify-content-center\">\n        <Image\n          id=\"profilePicUpload\"\n          src={imagePreview}\n          alt=\"Profile image\"\n          draggable=\"false\"\n          roundedCircle\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"name\">\n        <Form.Label>Full Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          tabIndex=\"1\"\n          placeholder=\"Full name\"\n          value={credentials.name}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"email\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          tabIndex=\"2\"\n          placeholder=\"Enter email\"\n          value={credentials.email}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          tabIndex=\"3\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"confirmPassword\"\n          tabIndex=\"4\"\n          placeholder=\"Confirm password\"\n          value={credentials.confirmPassword}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"profilePic\" className=\"mb-3\">\n        <Form.Label>Upload profile picture</Form.Label>\n        <Form.Control\n          type=\"file\"\n          accept=\"image/jpeg, image/jpg, image/png\"\n          name=\"profilePic\"\n          tabIndex=\"5\"\n          size=\"sm\"\n          onChange={(e) => handleProfilePic(e)}\n        />\n      </Form.Group>\n\n      <Button\n        tabIndex=\"6\"\n        variant=\"success\"\n        type=\"submit\"\n        className=\"mb-3\"\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner animation=\"border\" role=\"status\" size=\"sm\" />\n        ) : (\n          \"Create Account\"\n        )}\n      </Button>\n\n      <Form.Group className=\"mb-3 text-center\" controlId=\"register\">\n        <span>\n          Already have an account?&nbsp;\n          <Link to=\"/login\" tabIndex=\"6\" className=\"text-decoration-none\">\n            Log in\n          </Link>\n        </span>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default RegisterPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}